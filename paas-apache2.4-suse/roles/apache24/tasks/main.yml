---
- name: Validate Setup
  action: fail msg="Missing needed vars!"
  with_items: [ $base_dir, $owner, $group, $http_port, $https_port, $ssl_enabled ]
  when: item is not defined

- name: Copy SharedHosting.repo
  template: src=SharedHosting.repo.j2 dest=/etc/zypp/repos.d/SharedHosting.repo
  tags: zypper

- name: Remove zypper cache
  file: path=/var/cache/zypper state=absent
  file: path=/var/cache/zypper state=directory

- name: Clean zypper data
  command: zypper clean --all
  args:
     warn: no

- name: Install app-AIS-user-paasweb
  zypper: name=app-AIS-user-paasweb state=latest

- name: Install Apache
  zypper: name=httpd state=present

- name: Create {{base_dir}}/apache
  action: file path={{base_dir}}/apache state=directory owner={{owner}} group={{group}} mode=0755

- name: Create {{base_dir}}/apache/www
  action: file path={{base_dir}}/apache/www state=directory owner={{owner}} group={{group}} mode=0755

- name: Create {{base_dir}}/apache/www/html
  action: file path={{base_dir}}/apache/www/html state=directory owner={{owner}} group={{group}} mode=0775

- name: Create {{base_dir}}/apache/www/cgi-bin
  action: file path={{base_dir}}/apache/www/cgi-bin state=directory owner={{owner}} group={{group}} mode=0775

- name: Create {{base_dir}}/apache/www/html/DO_NOT_REMOVE
  action: file path={{base_dir}}/apache/www/html/DO_NOT_REMOVE state=directory owner={{owner}} group={{group}} mode=0755

- name: Create {{base_dir}}/logs/apache
  action: file path={{base_dir}}/logs/apache state=directory owner={{owner}} group={{group}} mode=0755

- name: Create {{base_dir}}/security
  action: file path={{base_dir}}/{{item.directory}} state=directory owner={{owner}} group={{group}} mode=0755
  with_items:
  - {directory: 'security/'}
  - {directory: 'security/ssl.crt'}
  - {directory: 'security/ssl.key'}

- name: Copy over default landing page
  template: src=templates/{{base_dir}}/apache/www/html/index.html.j2 dest={{base_dir}}/apache/www/html/index.html owner={{owner}} group={{group}} mode=0644

- name: Copy over default health check page
  template: src=templates/{{base_dir}}/apache/www/html/DO_NOT_REMOVE/health_check.html.j2 dest={{base_dir}}/apache/www/html/DO_NOT_REMOVE/health_check.html

    # ----------- START: conf files configuration

- name: Add apache templates for /etc/apache2
  template: src=templates/etc/apache2/{{item.source}} dest=/etc/apache2/{{item.dest}}
  with_items:
    - {source: 'httpd.conf.j2' , dest: 'httpd.conf'}
    - {source: 'default-server.conf.j2' , dest: 'default-server.conf'}
    - {source: 'extra.conf.j2' , dest: 'extra.conf'}
    - {source: 'mod_log_config.conf.j2' , dest: 'mod_log_config.conf'}
  notify: restart apache

- name: Add apache sysconfig template
  template: src=templates/etc/sysconfig/{{item.source}} dest=/etc/sysconfig/{{item.dest}}
  with_items:
    - {source: 'apache2.j2' , dest: 'apache2'}
  notify: restart apache

- name: Configure logrotate
  template: src=templates/etc/logrotate.d/apache2.j2 dest=/etc/logrotate.d/apache2

# ----------- START: SSL section

- name: Configure ssl global options and vhost
  template: src=templates/etc/apache2/{{item.source}} dest=/etc/apache2/{{item.dest}}
  with_items:
    - {source: 'ssl-global.conf.j2' , dest: 'ssl-global.conf'}
    - {source: 'vhosts.d/vhost-ssl.conf.j2' , dest: 'vhosts.d/vhost-ssl.conf'}
  when: ssl_enabled == 'yes'
  notify: restart apache

- name: Copy /opt/cloudhost/security/ files
  copy: src=files/security/{{item.source}} dest=/opt/cloudhost/security/{{item.dest}} owner=root group=root mode=0644
  with_items:
    - {source: 'ssl.crt/demo.crt' , dest: 'ssl.crt/demo.crt'}
    - {source: 'ssl.key/demo.key' , dest: 'ssl.key/demo.key'}
  when: ssl_enabled == 'yes'
  notify: restart apache

# ----------- END: SSL section
# ----------- START: Reverse Proxy section
- name: Configure proxy_ajp.conf
  template: src=files/etc/apache2/proxy_ajp.conf dest=/etc/apache2/proxy_ajp.conf
  notify: restart apache

- name: Copy weblogic module to target host
  copy: src=files/usr/lib64/apache2/mod_wl_24.so dest=/usr/lib64/apache2/mod_wl_24.so owner=root group=root mode=0755
  notify: restart apache

- name: Configure weblogic.conf
  template: src=files/etc/apache2/weblogic.conf dest=/etc/apache2/weblogic.conf
  notify: restart apache
# ----------- END: Reverse Proxy section

- name: Ensure Apache is running (and enable to autostart)
  action: service name=apache2 enabled=yes state=started

- name: Copy monit template /etc/monit.d/apache2 file
  copy: src=files/etc/monit.d/monit-apache2 dest=/etc/monit.d/apache2 owner=root group=root mode=0644
  notify: restart monit

#    - name: Configure motd
#      template: src=templates/etc/motd.j2 dest=/etc/motd
#      when: public_interface is not defined or public_interface != "bond0"
